# Workflow name
name: Release Build

on:
  # When it will be triggered and which branch
  push:
    tags:
      - 'v*'

# Where it will be run
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout out repository
      - name: Checkout
        uses: actions/checkout@v2.3.3

      # Setup JDK and Environment
      - name: Setup JDK Environment
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11.0.8

      # Make gradle executable
      - name: Make gradle executable
        run: chmod +x ./gradlew

      - name: Run Kotlin Linter
        run: ./gradlew check

      # Build all our Build Types at once
      - name: Build all artifacts
        id: BuildAllAPKs
        uses: eskatos/gradle-command-action@v1.3.3
        with:
          gradle-version: current
          wrapper-cache-enable: true
          dependencies-cache-enable: true
          configuration-cache-enable: true
          arguments: assembleRelease

      # Sign our artifacts
      - name: Sign artifacts
        id: signArtifacts
        uses: r0adkll/sign-android-release@v1.0.1
        with:
          releaseDirectory: app/release
          alias: ${{ secrets.KEYALIAS }}
          signingKeyBase64: ${{ secrets.KEYSTORE }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      - name: Upload our APK
        uses: actions/upload-artifact@v2.2.0
        with:
          name: Release artifact
          path: app/release/*.apk

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload our Artifact Assets
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.ARTIFACT_PATHNAME_APK }}
          asset_name: ${{ env.ARTIFACT_NAME_APK }}
          asset_content_type: application/zip