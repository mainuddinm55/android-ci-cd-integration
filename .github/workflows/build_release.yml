# Workflow name
name: Release Build

on:
  # When it will be triggered and which branch
  push:
    branches:
      - master

# Where it will be run
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # Checkout out repository
      - name: Checkout
        uses: actions/checkout@v2.3.3

      # Setup JDK and Environment
      - name: Setup JDK Environment
        uses: actions/setup-java@v1.4.3
        with:
          java-version: 11.0.8

      # Make gradle executable
      - name: Make gradle executable
        run: chmod +x ./gradlew

      - name: Run Kotlin Linter
        run: ./gradlew check

      # Build all our Build Types at once
      - name: Build APK
        run: ./gradlew assembleRelease --stacktrace

      # Sign our artifacts
      - name: Signed APK
        id: sign
        uses: r0adkll/sign-android-release@v1.0.1
        with:
          releaseDirectory: app/release
          alias: ${{ secrets.KEYALIAS }}
          signingKeyBase64: ${{ secrets.KEYSTORE }}
          keyStorePassword: ${{ secrets.KEYSTORE_PASSWORD }}
          keyPassword: ${{ secrets.KEY_PASSWORD }}

      # Upload APK
      - name: Upload APK
        uses: actions/upload-artifact@v2.2.0
        with:
          name: App
          path: app/build/outputs/apk/release/*.apk

      # Create Release
#      - name: Create Release
#        id: create_release
#        uses: actions/create-release@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
#        with:
#          tag_name: ${{ github.ref }}
#          release_name: Release ${{ github.ref }}
#          draft: false
#          prerelease: false
#
#       Save name for release
#      - name: Save name of Relase
#        id: set-result-artifact
#        run: |
#          RELEASE_PATHNAME_APK=$(ls app/release/*.apk | head -n 1)
#          RELEASE_NAME_APK=$(basename $RELEASE_PATHNAME_APK)
#          echo "RELEASE_NAME_APK is " ${RELEASE_NAME_APK}
#          echo "RELEASE_PATHNAME_APK=${RELEASE_PATHNAME_APK}" >> $GITHUB_ENV
#          echo "RELEASE_NAME_APK=${RELEASE_NAME_APK}" >> $GITHUB_ENV
#
#      - name: Upload Release Assets
#        id: upload-release-asset
#        uses: actions/upload-release-asset@v1
#        env:
#          GITHUB_TOKEN: ${{ secrets.TOKEN_GITHUB }}
#        with:
#          upload_url: ${{ steps.create_release.outputs.upload_url }}
#          asset_path: ${{ env.RELEASE_PATHNAME_APK }}
#          asset_name: ${{ env.RELEASE_NAME_APK }}
#          asset_content_type: application/zip